@charset "Utf-8";

/* Abaixo adicionando uma font externa */
@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap');

/* Abaixo adicionando uma font baixada */
@font-face {
    font-family: "Android";
    src: url("../fontes/idroid.otf") format(opentype);
    font-weight: normal;
}

/*  
#c5ebd6
#83e1ad
#3ddc84
#2fa866
#1a5c37
#063d1e 
*/

/* Usando variáveis para aplicar cores e fontes */
/* Todas as variáveis em CSS começam com --, (dois traços). */
/* Então será como esta abaixo: 
root:{
    --(nome da cor): (seu valor);
} 
*/

:root {
    --cor0: #c5ebd6;
    --cor1: #83e1ad;
    --cor2: #3ddc84;
    --cor3: #2fa866;
    --cor4: #1a5c37;
    --cor5: #063d1e;
    --cor6: #ffffff;
    --cor7: #000000;

    --font-padrao: Arial, Verdana, Helvetica, sans-serif;
    --fonte-destaque: "Bebas Neue", sans-serif;
    --fonte-android: "Android", sans-serif;
}

/* Configurando a remoção de margin e padding que vem por padrão nas tags, usando um seletor global: 
*{
    margin:0px;
    padding:0px;
}
*/
* {
    margin: 0px;
    padding: 0px;
}

body {
    background-color: var(--cor0);
    font-family: var(--font-padrao);
}

header {
    background-image: linear-gradient(to bottom, var(--cor2), var(--cor5));
    min-height: 150px;
    text-align: center;
    padding-top: 30px;
}

/* "a.externo::before{ content:'';}" com isso faço com que cada link da classe externa tenha um símbolo que peguei na emojipedia */
a.externo::before {
    content: '\1F517';
}

header>h1 {
    color: var(--cor6);
    font: normal 3em var(--fonte-destaque);
    margin-bottom: 20px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.434);
}

header>p {
    color: var(--cor6);
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.434);

    /* Short hand para a fonte */
    font: normal 1.2em var(--font-padrao);
    max-width: 600px;

    /* Usando "margin:auto;" pois ao add "width" o <p> virou um bloco */
    margin: auto;
    margin-bottom: 20px;
    padding-left: 10px;
    padding-right: 10px;
}

nav {
    background-color: var(--cor5);
    padding: 10px;
    box-shadow: 0px 7px 6px rgba(0, 0, 0, 0.247);
}

nav>a {
    color: var(--cor1);
    text-decoration: none;
    border-radius: 5px;
    padding: 10px;
    font-weight: bold;
    /* "Transitio-duration:;" quanto tempo de transição haverá após o cursosr passar sobre o item */
    transition-duration: 0.5s;
}

nav>a:hover {
    background-color: var(--cor2);
    color: var(--cor5);
}

main {
    background-color: var(--cor6);
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.422);

    /* Delimitando largura miníma e máxima do <main> */
    min-width: 300px;
    max-width: 1000px;

    /* "Margin:auto;" para não crescer o conteúdo em telas maiores, deixando-o no centro */
    margin: auto;
    margin-bottom: 30px;
    padding: 20px;

    /* Não usei "short hand" pois a config do border-radius é como uma regra de 3 (left-top, right-bottom, right-top, left-bottom) */
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

main>article>h1 {
    color: var(--cor5);
    font: normal 1.8em var(--fonte-android);
}

main>article>h2 {
    color: var(--cor4);
    text-indent: 5px;
    font: normal 1.3em var(--fonte-android);
    background-image: linear-gradient(to right, var(--cor1), var(--cor6));
}

/* Ao não usar o sinal (>), indicamos que todos os <P> dentro de <main> sofrerão tal adaptação */
main p {
    margin: 15px 0px;
    text-align: justify;
    text-indent: 30px;
    font-size: 1em;

    /* "Line-height:;" é o espaçamento vertical entre as linhas */
    line-height: 2em;
}

main strong {
    color: var(--cor4);
    font-weight: bold;
    padding: 2px 5px;
}

main a {
    text-decoration: none;
    font-weight: bold;
    color: var(--cor5);
    background-color: var(--cor1);
    padding: 2px 5px;
    border-radius: 5px;
}

main a:hover {
    text-decoration: underline;
    color: var(--cor4);
}

main>article>picture>img {
    /* Com o "width:100%;" dizemos que a imagem oculpará 100% da Div em que está, fazendo com que a mesma não se quebre ao apadtar o tamanho da tela */
    width: 100%;
}

/* Não gerei uma imagem pequena para o "bugdroid" então o adaptei manualmente */
img.pequena {
    max-width: 350px;

    /* "dislpay:block" (pois img não é um bloco) e "margin:auto" para centralizar */
    display: block;
    margin: auto;
}

.iframeflex {
    margin: 0px -20px 30px -20px;
    padding: 20px;
    padding-bottom: 57%;
    position: relative;
    background-color: var(--cor5);
}

div>iframe {

    /* Add um "position:relative;" na div que contém o iframe e após isso add "position:absolute;" no próprio iframe é um macete para poder centraliza-lo */
    position: absolute;
    top: 5%;
    left: 5%;
    width: 90%;
    height: 90%;
}

aside {
    background-color: var(--cor1);
    box-shadow: 2px 2px 5px var(--cor3);
    padding: 10px;
    border-radius: 10px;

}

aside>h3 {
    background-color: var(--cor4);
    color: var(--cor6);
    padding: 10px;

    /* "Margin: -10px;" (margin negativa) para fazer o h3 oculpar o espaço do aisde */
    margin: -10px -10px 0px -10px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
}

aside>ul {

    /* "list-style-position: inside;" levou para dentro do "aside" as bolinhas da lista não ordenada  */
    list-style-position: inside;

    /* "columns: 2;" dividiu a coluna em duas */
    columns: 2;

    /* O prof Guanabara adicionou um stilo de check para as versões do Android usando: 
    "list-style-type: '2714\00A0\00A0';" 
    (Não é compatível com todos os navegadores)
    O "list-style-type" add o estilo, o "2714" é o código do sinal de check na emojipedia e o "00A0" é um espaço entre */
}

footer {
    background-color: var(--cor5);
    color: var(--cor6);
    text-align: center;
    font-size: 0.8em;
    padding: 5px;
}

footer>p>a {
    font-weight: bolder;
    text-decoration: none;
    color: var(--cor6);
}

footer>p>a:hover {
    text-decoration: underline;
    color: var(--cor0);
}